//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace at.ac.tuwien.dsg.PRINGL
{
	/// <summary>
	/// DomainRelationship IncentiveStrategyHasIncentiveElements
	/// Description for at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements
	/// </summary>
	[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("db3f7693-cb20-4630-a974-7f0017e35005")]
	public partial class IncentiveStrategyHasIncentiveElements : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// IncentiveStrategyHasIncentiveElements domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdb3f7693, 0xcb20, 0x4630, 0xa9, 0x74, 0x7f, 0x00, 0x17, 0xe3, 0x50, 0x05);
	
				
		/// <summary>
		/// Constructor
		/// Creates a IncentiveStrategyHasIncentiveElements link in the same Partition as the given IncentiveStrategy
		/// </summary>
		/// <param name="source">IncentiveStrategy to use as the source of the relationship.</param>
		/// <param name="target">IncentiveElement to use as the target of the relationship.</param>
		public IncentiveStrategyHasIncentiveElements(IncentiveStrategy source, IncentiveElement target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(IncentiveStrategyHasIncentiveElements.IncentiveStrategyDomainRoleId, source), new DslModeling::RoleAssignment(IncentiveStrategyHasIncentiveElements.IncentiveElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public IncentiveStrategyHasIncentiveElements(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public IncentiveStrategyHasIncentiveElements(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public IncentiveStrategyHasIncentiveElements(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public IncentiveStrategyHasIncentiveElements(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region IncentiveStrategy domain role code
		
		/// <summary>
		/// IncentiveStrategy domain role Id.
		/// </summary>
		public static readonly global::System.Guid IncentiveStrategyDomainRoleId = new global::System.Guid(0xc5656818, 0x10a9, 0x4f7c, 0x9a, 0x6f, 0x24, 0xdd, 0x41, 0x91, 0xf9, 0x0c);
		
		/// <summary>
		/// DomainRole IncentiveStrategy
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.IncentiveStrategy
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements/IncentiveStrategy.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements/IncentiveStrategy.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "IncentiveElements", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements/IncentiveStrategy.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("c5656818-10a9-4f7c-9a6f-24dd4191f90c")]
		public virtual IncentiveStrategy IncentiveStrategy
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (IncentiveStrategy)DslModeling::DomainRoleInfo.GetRolePlayer(this, IncentiveStrategyDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, IncentiveStrategyDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access IncentiveStrategy of a IncentiveElement
		/// <summary>
		/// Gets IncentiveStrategy.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static IncentiveStrategy GetIncentiveStrategy(IncentiveElement element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, IncentiveElementDomainRoleId) as IncentiveStrategy;
		}
		
		/// <summary>
		/// Sets IncentiveStrategy.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetIncentiveStrategy(IncentiveElement element, IncentiveStrategy newIncentiveStrategy)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, IncentiveElementDomainRoleId, newIncentiveStrategy);
		}
		#endregion
		#region IncentiveElement domain role code
		
		/// <summary>
		/// IncentiveElement domain role Id.
		/// </summary>
		public static readonly global::System.Guid IncentiveElementDomainRoleId = new global::System.Guid(0xb777c1b4, 0x3cb0, 0x4093, 0x82, 0xd8, 0x2d, 0x3e, 0xc5, 0xcd, 0xa5, 0x8a);
		
		/// <summary>
		/// DomainRole IncentiveElement
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.IncentiveElement
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements/IncentiveElement.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements/IncentiveElement.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "IncentiveStrategy", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements/IncentiveElement.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("b777c1b4-3cb0-4093-82d8-2d3ec5cda58a")]
		public virtual IncentiveElement IncentiveElement
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (IncentiveElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, IncentiveElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, IncentiveElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access IncentiveElements of a IncentiveStrategy
		/// <summary>
		/// Gets a list of IncentiveElements.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<IncentiveElement> GetIncentiveElements(IncentiveStrategy element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<IncentiveElement>, IncentiveElement>(element, IncentiveStrategyDomainRoleId);
		}
		#endregion
		#region IncentiveStrategy link accessor
		/// <summary>
		/// Get the list of IncentiveStrategyHasIncentiveElements links to a IncentiveStrategy.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements> GetLinksToIncentiveElements ( global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategy incentiveStrategyInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements>(incentiveStrategyInstance, global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.IncentiveStrategyDomainRoleId);
		}
		#endregion
		#region IncentiveElement link accessor
		/// <summary>
		/// Get the IncentiveStrategyHasIncentiveElements link to a IncentiveElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements GetLinkToIncentiveStrategy (global::at.ac.tuwien.dsg.PRINGL.IncentiveElement incentiveElementInstance)
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements>(incentiveElementInstance, global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.IncentiveElementDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of IncentiveElement not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region IncentiveStrategyHasIncentiveElements instance accessors
		
		/// <summary>
		/// Get any IncentiveStrategyHasIncentiveElements links between a given IncentiveStrategy and a IncentiveElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements> GetLinks( global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategy source, global::at.ac.tuwien.dsg.PRINGL.IncentiveElement target )
		{
			global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements> outLinks = new global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements>();
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements>(source, global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.IncentiveStrategyDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements link in links )
			{
				if ( target.Equals(link.IncentiveElement) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one IncentiveStrategyHasIncentiveElements link between a given IncentiveStrategyand a IncentiveElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements GetLink( global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategy source, global::at.ac.tuwien.dsg.PRINGL.IncentiveElement target )
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements>(source, global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements.IncentiveStrategyDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.IncentiveStrategyHasIncentiveElements link in links )
			{
				if ( target.Equals(link.IncentiveElement) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace at.ac.tuwien.dsg.PRINGL
{
	/// <summary>
	/// DomainRelationship ElementHasParameters
	/// Description for at.ac.tuwien.dsg.PRINGL.ElementHasParameters
	/// </summary>
	[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ElementHasParameters.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ElementHasParameters.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("5d807c1b-4a13-4df1-adbb-834192314884")]
	public partial class ElementHasParameters : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ElementHasParameters domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5d807c1b, 0x4a13, 0x4df1, 0xad, 0xbb, 0x83, 0x41, 0x92, 0x31, 0x48, 0x84);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ElementHasParameters link in the same Partition as the given IncentiveElement
		/// </summary>
		/// <param name="source">IncentiveElement to use as the source of the relationship.</param>
		/// <param name="target">PRINGLParameter to use as the target of the relationship.</param>
		public ElementHasParameters(IncentiveElement source, PRINGLParameter target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ElementHasParameters.IncentiveElementDomainRoleId, source), new DslModeling::RoleAssignment(ElementHasParameters.PRINGLParameterDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ElementHasParameters(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ElementHasParameters(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ElementHasParameters(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ElementHasParameters(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region IncentiveElement domain role code
		
		/// <summary>
		/// IncentiveElement domain role Id.
		/// </summary>
		public static readonly global::System.Guid IncentiveElementDomainRoleId = new global::System.Guid(0x80126fb9, 0xd1c4, 0x4fec, 0x83, 0x1b, 0xbd, 0xca, 0x3f, 0x0b, 0x52, 0x03);
		
		/// <summary>
		/// DomainRole IncentiveElement
		/// Description for at.ac.tuwien.dsg.PRINGL.ElementHasParameters.IncentiveElement
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ElementHasParameters/IncentiveElement.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ElementHasParameters/IncentiveElement.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "PRINGLParameter", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.ElementHasParameters/IncentiveElement.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("80126fb9-d1c4-4fec-831b-bdca3f0b5203")]
		public virtual IncentiveElement IncentiveElement
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (IncentiveElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, IncentiveElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, IncentiveElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access IncentiveElement of a PRINGLParameter
		/// <summary>
		/// Gets IncentiveElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static IncentiveElement GetIncentiveElement(PRINGLParameter element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, PRINGLParameterDomainRoleId) as IncentiveElement;
		}
		
		/// <summary>
		/// Sets IncentiveElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetIncentiveElement(PRINGLParameter element, IncentiveElement newIncentiveElement)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, PRINGLParameterDomainRoleId, newIncentiveElement);
		}
		#endregion
		#region PRINGLParameter domain role code
		
		/// <summary>
		/// PRINGLParameter domain role Id.
		/// </summary>
		public static readonly global::System.Guid PRINGLParameterDomainRoleId = new global::System.Guid(0x50a6316d, 0x06fc, 0x4b0e, 0x9e, 0x5f, 0x08, 0x6a, 0xa4, 0x59, 0x80, 0x94);
		
		/// <summary>
		/// DomainRole PRINGLParameter
		/// Description for at.ac.tuwien.dsg.PRINGL.ElementHasParameters.PRINGLParameter
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ElementHasParameters/PRINGLParameter.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ElementHasParameters/PRINGLParameter.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "IncentiveElement", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.ElementHasParameters/PRINGLParameter.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("50a6316d-06fc-4b0e-9e5f-086aa4598094")]
		public virtual PRINGLParameter PRINGLParameter
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (PRINGLParameter)DslModeling::DomainRoleInfo.GetRolePlayer(this, PRINGLParameterDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, PRINGLParameterDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access PRINGLParameter of a IncentiveElement
		/// <summary>
		/// Gets a list of PRINGLParameter.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<PRINGLParameter> GetPRINGLParameter(IncentiveElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<PRINGLParameter>, PRINGLParameter>(element, IncentiveElementDomainRoleId);
		}
		#endregion
		#region IncentiveElement link accessor
		/// <summary>
		/// Get the list of ElementHasParameters links to a IncentiveElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters> GetLinksToPRINGLParameter ( global::at.ac.tuwien.dsg.PRINGL.IncentiveElement incentiveElementInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters>(incentiveElementInstance, global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters.IncentiveElementDomainRoleId);
		}
		#endregion
		#region PRINGLParameter link accessor
		/// <summary>
		/// Get the ElementHasParameters link to a PRINGLParameter.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters GetLinkToIncentiveElement (global::at.ac.tuwien.dsg.PRINGL.PRINGLParameter pRINGLParameterInstance)
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters>(pRINGLParameterInstance, global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters.PRINGLParameterDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of PRINGLParameter not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ElementHasParameters instance accessors
		
		/// <summary>
		/// Get any ElementHasParameters links between a given IncentiveElement and a PRINGLParameter.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters> GetLinks( global::at.ac.tuwien.dsg.PRINGL.IncentiveElement source, global::at.ac.tuwien.dsg.PRINGL.PRINGLParameter target )
		{
			global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters> outLinks = new global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters>();
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters>(source, global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters.IncentiveElementDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters link in links )
			{
				if ( target.Equals(link.PRINGLParameter) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ElementHasParameters link between a given IncentiveElementand a PRINGLParameter.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters GetLink( global::at.ac.tuwien.dsg.PRINGL.IncentiveElement source, global::at.ac.tuwien.dsg.PRINGL.PRINGLParameter target )
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters>(source, global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters.IncentiveElementDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.ElementHasParameters link in links )
			{
				if ( target.Equals(link.PRINGLParameter) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace at.ac.tuwien.dsg.PRINGL
{
	/// <summary>
	/// DomainRelationship DefinitionReferencesInstance
	/// Description for at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance
	/// </summary>
	[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("d80930a9-bd5a-488d-b012-810d27d0240d")]
	public partial class DefinitionReferencesInstance : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// DefinitionReferencesInstance domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd80930a9, 0xbd5a, 0x488d, 0xb0, 0x12, 0x81, 0x0d, 0x27, 0xd0, 0x24, 0x0d);
	
				
		/// <summary>
		/// Constructor
		/// Creates a DefinitionReferencesInstance link in the same Partition as the given SimpleDefinition
		/// </summary>
		/// <param name="source">SimpleDefinition to use as the source of the relationship.</param>
		/// <param name="target">PRINGLInstance to use as the target of the relationship.</param>
		public DefinitionReferencesInstance(SimpleDefinition source, PRINGLInstance target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(DefinitionReferencesInstance.SimpleDefinitionDomainRoleId, source), new DslModeling::RoleAssignment(DefinitionReferencesInstance.PRINGLInstanceDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public DefinitionReferencesInstance(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public DefinitionReferencesInstance(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public DefinitionReferencesInstance(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public DefinitionReferencesInstance(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region SimpleDefinition domain role code
		
		/// <summary>
		/// SimpleDefinition domain role Id.
		/// </summary>
		public static readonly global::System.Guid SimpleDefinitionDomainRoleId = new global::System.Guid(0xd40c4950, 0x0567, 0x4108, 0x98, 0x43, 0x88, 0x40, 0x0d, 0xea, 0x6a, 0x9b);
		
		/// <summary>
		/// DomainRole SimpleDefinition
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.SimpleDefinition
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance/SimpleDefinition.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance/SimpleDefinition.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "PRINGLInstance", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance/SimpleDefinition.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("d40c4950-0567-4108-9843-88400dea6a9b")]
		public virtual SimpleDefinition SimpleDefinition
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (SimpleDefinition)DslModeling::DomainRoleInfo.GetRolePlayer(this, SimpleDefinitionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SimpleDefinitionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access SimpleDefinitions of a PRINGLInstance
		/// <summary>
		/// Gets a list of SimpleDefinitions.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<SimpleDefinition> GetSimpleDefinitions(PRINGLInstance element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<SimpleDefinition>, SimpleDefinition>(element, PRINGLInstanceDomainRoleId);
		}
		#endregion
		#region PRINGLInstance domain role code
		
		/// <summary>
		/// PRINGLInstance domain role Id.
		/// </summary>
		public static readonly global::System.Guid PRINGLInstanceDomainRoleId = new global::System.Guid(0x7d4f690e, 0xea59, 0x4445, 0xab, 0x6d, 0x41, 0xbb, 0xc5, 0xfb, 0xb5, 0xd7);
		
		/// <summary>
		/// DomainRole PRINGLInstance
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.PRINGLInstance
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance/PRINGLInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance/PRINGLInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "SimpleDefinitions", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance/PRINGLInstance.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("7d4f690e-ea59-4445-ab6d-41bbc5fbb5d7")]
		public virtual PRINGLInstance PRINGLInstance
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (PRINGLInstance)DslModeling::DomainRoleInfo.GetRolePlayer(this, PRINGLInstanceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, PRINGLInstanceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access PRINGLInstance of a SimpleDefinition
		/// <summary>
		/// Gets a list of PRINGLInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<PRINGLInstance> GetPRINGLInstance(SimpleDefinition element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<PRINGLInstance>, PRINGLInstance>(element, SimpleDefinitionDomainRoleId);
		}
		#endregion
		#region SimpleDefinition link accessor
		/// <summary>
		/// Get the list of DefinitionReferencesInstance links to a SimpleDefinition.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance> GetLinksToPRINGLInstance ( global::at.ac.tuwien.dsg.PRINGL.SimpleDefinition simpleDefinitionInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance>(simpleDefinitionInstance, global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.SimpleDefinitionDomainRoleId);
		}
		#endregion
		#region PRINGLInstance link accessor
		/// <summary>
		/// Get the list of DefinitionReferencesInstance links to a PRINGLInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance> GetLinksToSimpleDefinitions ( global::at.ac.tuwien.dsg.PRINGL.PRINGLInstance pRINGLInstanceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance>(pRINGLInstanceInstance, global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.PRINGLInstanceDomainRoleId);
		}
		#endregion
		#region DefinitionReferencesInstance instance accessors
		
		/// <summary>
		/// Get any DefinitionReferencesInstance links between a given SimpleDefinition and a PRINGLInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance> GetLinks( global::at.ac.tuwien.dsg.PRINGL.SimpleDefinition source, global::at.ac.tuwien.dsg.PRINGL.PRINGLInstance target )
		{
			global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance> outLinks = new global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance>();
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance>(source, global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.SimpleDefinitionDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance link in links )
			{
				if ( target.Equals(link.PRINGLInstance) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one DefinitionReferencesInstance link between a given SimpleDefinitionand a PRINGLInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance GetLink( global::at.ac.tuwien.dsg.PRINGL.SimpleDefinition source, global::at.ac.tuwien.dsg.PRINGL.PRINGLInstance target )
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance>(source, global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance.SimpleDefinitionDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.DefinitionReferencesInstance link in links )
			{
				if ( target.Equals(link.PRINGLInstance) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace at.ac.tuwien.dsg.PRINGL
{
	/// <summary>
	/// Double-derived base class for DomainRelationship ContainerHasInnerFilterInstances
	/// </summary>
	[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("8019f395-de27-4c73-96f5-58e174522efb")]
	public abstract partial class ContainerHasInnerFilterInstancesBase : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ContainerHasInnerFilterInstances domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8019f395, 0xde27, 0x4c73, 0x96, 0xf5, 0x58, 0xe1, 0x74, 0x52, 0x2e, 0xfb);
	
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">The Partition instance containing this ElementLink</param>
		/// <param name="roleAssignments">A set of role assignments for roleplayer initialization</param>
		/// <param name="propertyAssignments">A set of attribute assignments for attribute initialization</param>
		protected ContainerHasInnerFilterInstancesBase(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Container domain role code
		
		/// <summary>
		/// Container domain role Id.
		/// </summary>
		public static readonly global::System.Guid ContainerDomainRoleId = new global::System.Guid(0x693a49a4, 0x95e0, 0x4009, 0x9f, 0xc5, 0x90, 0xee, 0x71, 0xf4, 0x23, 0x61);
		
		/// <summary>
		/// DomainRole Container
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.Container
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances/Container.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances/Container.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "InnerFilterInstances", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances/Container.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("693a49a4-95e0-4009-9fc5-90ee71f42361")]
		public virtual Container Container
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Container)DslModeling::DomainRoleInfo.GetRolePlayer(this, ContainerDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ContainerDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Container of a InnerFilterInstance
		/// <summary>
		/// Gets Container.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Container GetContainer(InnerFilterInstance element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InnerFilterInstanceDomainRoleId) as Container;
		}
		
		/// <summary>
		/// Sets Container.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetContainer(InnerFilterInstance element, Container newContainer)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InnerFilterInstanceDomainRoleId, newContainer);
		}
		#endregion
		#region InnerFilterInstance domain role code
		
		/// <summary>
		/// InnerFilterInstance domain role Id.
		/// </summary>
		public static readonly global::System.Guid InnerFilterInstanceDomainRoleId = new global::System.Guid(0xa81eb923, 0x8b2d, 0x4e29, 0x8f, 0x0d, 0x90, 0xc9, 0x6b, 0x90, 0x27, 0x78);
		
		/// <summary>
		/// DomainRole InnerFilterInstance
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.InnerFilterInstance
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances/InnerFilterInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances/InnerFilterInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Container", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances/InnerFilterInstance.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("a81eb923-8b2d-4e29-8f0d-90c96b902778")]
		public virtual InnerFilterInstance InnerFilterInstance
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InnerFilterInstance)DslModeling::DomainRoleInfo.GetRolePlayer(this, InnerFilterInstanceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InnerFilterInstanceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access InnerFilterInstances of a Container
		/// <summary>
		/// Gets a list of InnerFilterInstances.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<InnerFilterInstance> GetInnerFilterInstances(Container element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<InnerFilterInstance>, InnerFilterInstance>(element, ContainerDomainRoleId);
		}
		#endregion
		#region Container link accessor
		/// <summary>
		/// Get the list of ContainerHasInnerFilterInstances links to a Container.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances> GetLinksToInnerFilterInstances ( global::at.ac.tuwien.dsg.PRINGL.Container containerInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances>(containerInstance, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.ContainerDomainRoleId);
		}
		#endregion
		#region InnerFilterInstance link accessor
		/// <summary>
		/// Get the ContainerHasInnerFilterInstances link to a InnerFilterInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances GetLinkToContainer (global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance innerFilterInstanceInstance)
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances>(innerFilterInstanceInstance, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.InnerFilterInstanceDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of InnerFilterInstance not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ContainerHasInnerFilterInstances instance accessors
		
		/// <summary>
		/// Get any ContainerHasInnerFilterInstances links between a given Container and a InnerFilterInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances> GetLinks( global::at.ac.tuwien.dsg.PRINGL.Container source, global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance target )
		{
			global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances> outLinks = new global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances>();
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances>(source, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.ContainerDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances link in links )
			{
				if ( target.Equals(link.InnerFilterInstance) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ContainerHasInnerFilterInstances link between a given Containerand a InnerFilterInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances GetLink( global::at.ac.tuwien.dsg.PRINGL.Container source, global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance target )
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances>(source, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances.ContainerDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances link in links )
			{
				if ( target.Equals(link.InnerFilterInstance) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
	/// <summary>
	/// DomainRelationship ContainerHasInnerFilterInstances
	/// Description for at.ac.tuwien.dsg.PRINGL.ContainerHasInnerFilterInstances
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ContainerHasInnerFilterInstances : ContainerHasInnerFilterInstancesBase
	{
		#region Constructors
				
		/// <summary>
		/// Constructor
		/// Creates a ContainerHasInnerFilterInstances link in the same Partition as the given Container
		/// </summary>
		/// <param name="source">Container to use as the source of the relationship.</param>
		/// <param name="target">InnerFilterInstance to use as the target of the relationship.</param>
		public ContainerHasInnerFilterInstances(Container source, InnerFilterInstance target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ContainerHasInnerFilterInstances.ContainerDomainRoleId, source), new DslModeling::RoleAssignment(ContainerHasInnerFilterInstances.InnerFilterInstanceDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ContainerHasInnerFilterInstances(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ContainerHasInnerFilterInstances(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ContainerHasInnerFilterInstances(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ContainerHasInnerFilterInstances(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace at.ac.tuwien.dsg.PRINGL
{
	/// <summary>
	/// Double-derived base class for DomainRelationship ContainerHasInnerActionInstances
	/// </summary>
	[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("7ba09834-3fdf-4770-9aa5-cdf2b5979301")]
	public abstract partial class ContainerHasInnerActionInstancesBase : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ContainerHasInnerActionInstances domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7ba09834, 0x3fdf, 0x4770, 0x9a, 0xa5, 0xcd, 0xf2, 0xb5, 0x97, 0x93, 0x01);
	
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">The Partition instance containing this ElementLink</param>
		/// <param name="roleAssignments">A set of role assignments for roleplayer initialization</param>
		/// <param name="propertyAssignments">A set of attribute assignments for attribute initialization</param>
		protected ContainerHasInnerActionInstancesBase(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Container domain role code
		
		/// <summary>
		/// Container domain role Id.
		/// </summary>
		public static readonly global::System.Guid ContainerDomainRoleId = new global::System.Guid(0x00f72865, 0x95d4, 0x45a7, 0xb6, 0xc4, 0xdc, 0x1d, 0x5a, 0x59, 0x90, 0x6b);
		
		/// <summary>
		/// DomainRole Container
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.Container
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances/Container.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances/Container.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "InnerActionInstances", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances/Container.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("00f72865-95d4-45a7-b6c4-dc1d5a59906b")]
		public virtual Container Container
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Container)DslModeling::DomainRoleInfo.GetRolePlayer(this, ContainerDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ContainerDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Container of a InnerActionInstance
		/// <summary>
		/// Gets Container.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Container GetContainer(InnerActionInstance element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InnerActionInstanceDomainRoleId) as Container;
		}
		
		/// <summary>
		/// Sets Container.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetContainer(InnerActionInstance element, Container newContainer)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InnerActionInstanceDomainRoleId, newContainer);
		}
		#endregion
		#region InnerActionInstance domain role code
		
		/// <summary>
		/// InnerActionInstance domain role Id.
		/// </summary>
		public static readonly global::System.Guid InnerActionInstanceDomainRoleId = new global::System.Guid(0x04e44cc1, 0xda9b, 0x459b, 0x8c, 0x93, 0x5e, 0x2d, 0x1d, 0x77, 0x47, 0x31);
		
		/// <summary>
		/// DomainRole InnerActionInstance
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.InnerActionInstance
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances/InnerActionInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances/InnerActionInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Container", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances/InnerActionInstance.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("04e44cc1-da9b-459b-8c93-5e2d1d774731")]
		public virtual InnerActionInstance InnerActionInstance
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InnerActionInstance)DslModeling::DomainRoleInfo.GetRolePlayer(this, InnerActionInstanceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InnerActionInstanceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access InnerActionInstances of a Container
		/// <summary>
		/// Gets a list of InnerActionInstances.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<InnerActionInstance> GetInnerActionInstances(Container element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<InnerActionInstance>, InnerActionInstance>(element, ContainerDomainRoleId);
		}
		#endregion
		#region Container link accessor
		/// <summary>
		/// Get the list of ContainerHasInnerActionInstances links to a Container.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances> GetLinksToInnerActionInstances ( global::at.ac.tuwien.dsg.PRINGL.Container containerInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances>(containerInstance, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.ContainerDomainRoleId);
		}
		#endregion
		#region InnerActionInstance link accessor
		/// <summary>
		/// Get the ContainerHasInnerActionInstances link to a InnerActionInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances GetLinkToContainer (global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance innerActionInstanceInstance)
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances>(innerActionInstanceInstance, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.InnerActionInstanceDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of InnerActionInstance not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ContainerHasInnerActionInstances instance accessors
		
		/// <summary>
		/// Get any ContainerHasInnerActionInstances links between a given Container and a InnerActionInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances> GetLinks( global::at.ac.tuwien.dsg.PRINGL.Container source, global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance target )
		{
			global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances> outLinks = new global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances>();
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances>(source, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.ContainerDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances link in links )
			{
				if ( target.Equals(link.InnerActionInstance) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ContainerHasInnerActionInstances link between a given Containerand a InnerActionInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances GetLink( global::at.ac.tuwien.dsg.PRINGL.Container source, global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance target )
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances>(source, global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances.ContainerDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances link in links )
			{
				if ( target.Equals(link.InnerActionInstance) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
	/// <summary>
	/// DomainRelationship ContainerHasInnerActionInstances
	/// Description for at.ac.tuwien.dsg.PRINGL.ContainerHasInnerActionInstances
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ContainerHasInnerActionInstances : ContainerHasInnerActionInstancesBase
	{
		#region Constructors
				
		/// <summary>
		/// Constructor
		/// Creates a ContainerHasInnerActionInstances link in the same Partition as the given Container
		/// </summary>
		/// <param name="source">Container to use as the source of the relationship.</param>
		/// <param name="target">InnerActionInstance to use as the target of the relationship.</param>
		public ContainerHasInnerActionInstances(Container source, InnerActionInstance target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ContainerHasInnerActionInstances.ContainerDomainRoleId, source), new DslModeling::RoleAssignment(ContainerHasInnerActionInstances.InnerActionInstanceDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ContainerHasInnerActionInstances(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ContainerHasInnerActionInstances(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ContainerHasInnerActionInstances(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ContainerHasInnerActionInstances(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace at.ac.tuwien.dsg.PRINGL
{
	/// <summary>
	/// DomainRelationship InnerFilterFlow
	/// Description for at.ac.tuwien.dsg.PRINGL.InnerFilterFlow
	/// </summary>
	[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("8ca2e7fd-586b-4363-b341-0c53b6cbaf62")]
	public partial class InnerFilterFlow : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// InnerFilterFlow domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8ca2e7fd, 0x586b, 0x4363, 0xb3, 0x41, 0x0c, 0x53, 0xb6, 0xcb, 0xaf, 0x62);
	
				
		/// <summary>
		/// Constructor
		/// Creates a InnerFilterFlow link in the same Partition as the given InnerFilterInstance
		/// </summary>
		/// <param name="source">InnerFilterInstance to use as the source of the relationship.</param>
		/// <param name="target">InnerFilterInstance to use as the target of the relationship.</param>
		public InnerFilterFlow(InnerFilterInstance source, InnerFilterInstance target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(InnerFilterFlow.SourceInnerFilterInstanceDomainRoleId, source), new DslModeling::RoleAssignment(InnerFilterFlow.TargetInnerFilterInstanceDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InnerFilterFlow(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InnerFilterFlow(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InnerFilterFlow(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InnerFilterFlow(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region SourceInnerFilterInstance domain role code
		
		/// <summary>
		/// SourceInnerFilterInstance domain role Id.
		/// </summary>
		public static readonly global::System.Guid SourceInnerFilterInstanceDomainRoleId = new global::System.Guid(0xd3b13242, 0x0155, 0x4301, 0xbb, 0xf1, 0x6d, 0x53, 0x30, 0xa6, 0xbf, 0x09);
		
		/// <summary>
		/// DomainRole SourceInnerFilterInstance
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.SourceInnerFilterInstance
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/SourceInnerFilterInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/SourceInnerFilterInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "FilterFlowTo", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/SourceInnerFilterInstance.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("d3b13242-0155-4301-bbf1-6d5330a6bf09")]
		public virtual InnerFilterInstance SourceInnerFilterInstance
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InnerFilterInstance)DslModeling::DomainRoleInfo.GetRolePlayer(this, SourceInnerFilterInstanceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SourceInnerFilterInstanceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access FilterFlowFrom of a InnerFilterInstance
		/// <summary>
		/// Gets a list of FilterFlowFrom.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<InnerFilterInstance> GetFilterFlowFrom(InnerFilterInstance element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<InnerFilterInstance>, InnerFilterInstance>(element, TargetInnerFilterInstanceDomainRoleId);
		}
		#endregion
		#region TargetInnerFilterInstance domain role code
		
		/// <summary>
		/// TargetInnerFilterInstance domain role Id.
		/// </summary>
		public static readonly global::System.Guid TargetInnerFilterInstanceDomainRoleId = new global::System.Guid(0xfdf29c28, 0x3e8b, 0x403a, 0xbe, 0x3e, 0xa0, 0xdd, 0xd3, 0x01, 0xd4, 0xfa);
		
		/// <summary>
		/// DomainRole TargetInnerFilterInstance
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.TargetInnerFilterInstance
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/TargetInnerFilterInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/TargetInnerFilterInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "FilterFlowFrom", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/TargetInnerFilterInstance.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("fdf29c28-3e8b-403a-be3e-a0ddd301d4fa")]
		public virtual InnerFilterInstance TargetInnerFilterInstance
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InnerFilterInstance)DslModeling::DomainRoleInfo.GetRolePlayer(this, TargetInnerFilterInstanceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TargetInnerFilterInstanceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access FilterFlowTo of a InnerFilterInstance
		/// <summary>
		/// Gets a list of FilterFlowTo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<InnerFilterInstance> GetFilterFlowTo(InnerFilterInstance element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<InnerFilterInstance>, InnerFilterInstance>(element, SourceInnerFilterInstanceDomainRoleId);
		}
		#endregion
		#region IsComplemented domain property code
		
		/// <summary>
		/// IsComplemented domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsComplementedDomainPropertyId = new global::System.Guid(0xc034d3cc, 0x1054, 0x4805, 0x85, 0x44, 0xcb, 0xf3, 0x5a, 0x0d, 0xc9, 0xe8);
		
		/// <summary>
		/// Storage for IsComplemented
		/// </summary>
		private global::System.Boolean isComplementedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsComplemented domain property.
		/// Description for at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.Is Complemented
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/IsComplemented.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerFilterFlow/IsComplemented.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c034d3cc-1054-4805-8544-cbf35a0dc9e8")]
		public global::System.Boolean IsComplemented
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isComplementedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsComplementedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the InnerFilterFlow.IsComplemented domain property.
		/// </summary>
		internal sealed partial class IsComplementedPropertyHandler : DslModeling::DomainPropertyValueHandler<InnerFilterFlow, global::System.Boolean>
		{
			private IsComplementedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the InnerFilterFlow.IsComplemented domain property value handler.
			/// </summary>
			public static readonly IsComplementedPropertyHandler Instance = new IsComplementedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the InnerFilterFlow.IsComplemented domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsComplementedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(InnerFilterFlow element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isComplementedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(InnerFilterFlow element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isComplementedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SourceInnerFilterInstance link accessor
		/// <summary>
		/// Get the list of InnerFilterFlow links to a InnerFilterInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow> GetLinksToFilterFlowTo ( global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance sourceInnerFilterInstanceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow>(sourceInnerFilterInstanceInstance, global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.SourceInnerFilterInstanceDomainRoleId);
		}
		#endregion
		#region TargetInnerFilterInstance link accessor
		/// <summary>
		/// Get the list of InnerFilterFlow links to a InnerFilterInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow> GetLinksToFilterFlowFrom ( global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance targetInnerFilterInstanceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow>(targetInnerFilterInstanceInstance, global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.TargetInnerFilterInstanceDomainRoleId);
		}
		#endregion
		#region InnerFilterFlow instance accessors
		
		/// <summary>
		/// Get any InnerFilterFlow links between a given InnerFilterInstance and a InnerFilterInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow> GetLinks( global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance source, global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance target )
		{
			global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow> outLinks = new global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow>();
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow>(source, global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.SourceInnerFilterInstanceDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow link in links )
			{
				if ( target.Equals(link.TargetInnerFilterInstance) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one InnerFilterFlow link between a given InnerFilterInstanceand a InnerFilterInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow GetLink( global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance source, global::at.ac.tuwien.dsg.PRINGL.InnerFilterInstance target )
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow>(source, global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow.SourceInnerFilterInstanceDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.InnerFilterFlow link in links )
			{
				if ( target.Equals(link.TargetInnerFilterInstance) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace at.ac.tuwien.dsg.PRINGL
{
	/// <summary>
	/// DomainRelationship InnerActionFlow
	/// Description for at.ac.tuwien.dsg.PRINGL.InnerActionFlow
	/// </summary>
	[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("6e79500d-b6ea-491f-bbdc-76fe94a7314e")]
	public partial class InnerActionFlow : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// InnerActionFlow domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x6e79500d, 0xb6ea, 0x491f, 0xbb, 0xdc, 0x76, 0xfe, 0x94, 0xa7, 0x31, 0x4e);
	
				
		/// <summary>
		/// Constructor
		/// Creates a InnerActionFlow link in the same Partition as the given InnerActionInstance
		/// </summary>
		/// <param name="source">InnerActionInstance to use as the source of the relationship.</param>
		/// <param name="target">InnerActionInstance to use as the target of the relationship.</param>
		public InnerActionFlow(InnerActionInstance source, InnerActionInstance target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(InnerActionFlow.SourceInnerActionInstanceDomainRoleId, source), new DslModeling::RoleAssignment(InnerActionFlow.TargetInnerActionInstanceDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InnerActionFlow(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InnerActionFlow(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InnerActionFlow(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InnerActionFlow(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region SourceInnerActionInstance domain role code
		
		/// <summary>
		/// SourceInnerActionInstance domain role Id.
		/// </summary>
		public static readonly global::System.Guid SourceInnerActionInstanceDomainRoleId = new global::System.Guid(0xb9cf047c, 0x97a4, 0x4097, 0x85, 0x59, 0x4c, 0x25, 0xbc, 0xd2, 0x73, 0xf1);
		
		/// <summary>
		/// DomainRole SourceInnerActionInstance
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.InnerActionFlow.SourceInnerActionInstance
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/SourceInnerActionInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/SourceInnerActionInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ActionFlowTo", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.InnerActionFlow/SourceInnerActionInstance.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("b9cf047c-97a4-4097-8559-4c25bcd273f1")]
		public virtual InnerActionInstance SourceInnerActionInstance
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InnerActionInstance)DslModeling::DomainRoleInfo.GetRolePlayer(this, SourceInnerActionInstanceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SourceInnerActionInstanceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ActionFlowFrom of a InnerActionInstance
		/// <summary>
		/// Gets a list of ActionFlowFrom.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<InnerActionInstance> GetActionFlowFrom(InnerActionInstance element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<InnerActionInstance>, InnerActionInstance>(element, TargetInnerActionInstanceDomainRoleId);
		}
		#endregion
		#region TargetInnerActionInstance domain role code
		
		/// <summary>
		/// TargetInnerActionInstance domain role Id.
		/// </summary>
		public static readonly global::System.Guid TargetInnerActionInstanceDomainRoleId = new global::System.Guid(0x5ef0e04c, 0x69c7, 0x4afb, 0xa2, 0x0d, 0x68, 0x9b, 0x30, 0xd1, 0x9b, 0x27);
		
		/// <summary>
		/// DomainRole TargetInnerActionInstance
		/// Description for
		/// at.ac.tuwien.dsg.PRINGL.InnerActionFlow.TargetInnerActionInstance
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/TargetInnerActionInstance.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/TargetInnerActionInstance.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ActionFlowFrom", PropertyDisplayNameKey="at.ac.tuwien.dsg.PRINGL.InnerActionFlow/TargetInnerActionInstance.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("5ef0e04c-69c7-4afb-a20d-689b30d19b27")]
		public virtual InnerActionInstance TargetInnerActionInstance
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InnerActionInstance)DslModeling::DomainRoleInfo.GetRolePlayer(this, TargetInnerActionInstanceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TargetInnerActionInstanceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ActionFlowTo of a InnerActionInstance
		/// <summary>
		/// Gets a list of ActionFlowTo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<InnerActionInstance> GetActionFlowTo(InnerActionInstance element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<InnerActionInstance>, InnerActionInstance>(element, SourceInnerActionInstanceDomainRoleId);
		}
		#endregion
		#region IsComplemented domain property code
		
		/// <summary>
		/// IsComplemented domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsComplementedDomainPropertyId = new global::System.Guid(0x41c144a6, 0x2552, 0x4fac, 0xb2, 0xc1, 0x52, 0xd3, 0x8e, 0xea, 0xf2, 0x97);
		
		/// <summary>
		/// Storage for IsComplemented
		/// </summary>
		private global::System.Boolean isComplementedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsComplemented domain property.
		/// Description for at.ac.tuwien.dsg.PRINGL.InnerActionFlow.Is Complemented
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/IsComplemented.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/IsComplemented.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("41c144a6-2552-4fac-b2c1-52d38eeaf297")]
		public global::System.Boolean IsComplemented
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isComplementedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsComplementedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the InnerActionFlow.IsComplemented domain property.
		/// </summary>
		internal sealed partial class IsComplementedPropertyHandler : DslModeling::DomainPropertyValueHandler<InnerActionFlow, global::System.Boolean>
		{
			private IsComplementedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the InnerActionFlow.IsComplemented domain property value handler.
			/// </summary>
			public static readonly IsComplementedPropertyHandler Instance = new IsComplementedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the InnerActionFlow.IsComplemented domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsComplementedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(InnerActionFlow element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isComplementedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(InnerActionFlow element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isComplementedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Delay domain property code
		
		/// <summary>
		/// Delay domain property Id.
		/// </summary>
		public static readonly global::System.Guid DelayDomainPropertyId = new global::System.Guid(0x6b6a4197, 0x0dd7, 0x4377, 0x95, 0xfa, 0x37, 0x06, 0x54, 0x64, 0x2d, 0x01);
		
		/// <summary>
		/// Storage for Delay
		/// </summary>
		private global::System.Int32 delayPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Delay domain property.
		/// Description for at.ac.tuwien.dsg.PRINGL.InnerActionFlow.Delay
		/// </summary>
		[DslDesign::DisplayNameResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/Delay.DisplayName", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("at.ac.tuwien.dsg.PRINGL.InnerActionFlow/Delay.Description", typeof(global::at.ac.tuwien.dsg.PRINGL.PRINGLDomainModel), "at.ac.tuwien.dsg.PRINGL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6b6a4197-0dd7-4377-95fa-370654642d01")]
		public global::System.Int32 Delay
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return delayPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DelayPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the InnerActionFlow.Delay domain property.
		/// </summary>
		internal sealed partial class DelayPropertyHandler : DslModeling::DomainPropertyValueHandler<InnerActionFlow, global::System.Int32>
		{
			private DelayPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the InnerActionFlow.Delay domain property value handler.
			/// </summary>
			public static readonly DelayPropertyHandler Instance = new DelayPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the InnerActionFlow.Delay domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DelayDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(InnerActionFlow element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.delayPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(InnerActionFlow element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.delayPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SourceInnerActionInstance link accessor
		/// <summary>
		/// Get the list of InnerActionFlow links to a InnerActionInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow> GetLinksToActionFlowTo ( global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance sourceInnerActionInstanceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow>(sourceInnerActionInstanceInstance, global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow.SourceInnerActionInstanceDomainRoleId);
		}
		#endregion
		#region TargetInnerActionInstance link accessor
		/// <summary>
		/// Get the list of InnerActionFlow links to a InnerActionInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow> GetLinksToActionFlowFrom ( global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance targetInnerActionInstanceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow>(targetInnerActionInstanceInstance, global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow.TargetInnerActionInstanceDomainRoleId);
		}
		#endregion
		#region InnerActionFlow instance accessors
		
		/// <summary>
		/// Get any InnerActionFlow links between a given InnerActionInstance and a InnerActionInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow> GetLinks( global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance source, global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance target )
		{
			global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow> outLinks = new global::System.Collections.Generic.List<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow>();
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow>(source, global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow.SourceInnerActionInstanceDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow link in links )
			{
				if ( target.Equals(link.TargetInnerActionInstance) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one InnerActionFlow link between a given InnerActionInstanceand a InnerActionInstance.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow GetLink( global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance source, global::at.ac.tuwien.dsg.PRINGL.InnerActionInstance target )
		{
			global::System.Collections.Generic.IList<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow> links = DslModeling::DomainRoleInfo.GetElementLinks<global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow>(source, global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow.SourceInnerActionInstanceDomainRoleId);
			foreach ( global::at.ac.tuwien.dsg.PRINGL.InnerActionFlow link in links )
			{
				if ( target.Equals(link.TargetInnerActionInstance) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
